/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package ui.form;

import communication.Operation;
import components.table.model.TerminTableModel;
import domain.Kamion;
import domain.KomunalniRadnik;
import domain.Mesto;
import domain.Termin;
import java.time.LocalDate;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.SwingUtilities;
import javax.swing.table.TableModel;
import ui.controller.Controller;

/**
 *
 * @author HP
 */
public class FrmNewEditKR extends javax.swing.JDialog {

    private Operation mode;
    private KomunalniRadnik komunalniRadnik;

    /**
     * Creates new form FmrNewEditKR
     */
    public FrmNewEditKR(java.awt.Frame parent, boolean modal, Operation mode) throws Exception {
        super(parent, modal);
        this.mode = mode;
        initComponents();
        setLocationRelativeTo(null);

        komunalniRadnik = new KomunalniRadnik();
        komunalniRadnik.setTermini(new ArrayList<>());

        setTitle("Cuvanje komunalnog radnika");
        prepareForm();
        fillComboboxes();

    }

    public FrmNewEditKR(java.awt.Frame parent, boolean modal, Operation mode, KomunalniRadnik kr) throws Exception {
        super(parent, modal);

        initComponents();
        setLocationRelativeTo(null);
        this.mode = mode;

        komunalniRadnik = kr;

        setTitle("Cuvanje komunalnog radnika");

        prepareForm();

        fillComboboxes();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblIme = new javax.swing.JLabel();
        lblPrezime = new javax.swing.JLabel();
        lblMesto = new javax.swing.JLabel();
        comboBoxMesto = new javax.swing.JComboBox<>();
        btnSacuvaj = new javax.swing.JButton();
        txtKRIme = new javax.swing.JTextField();
        txtKRPrezime = new javax.swing.JTextField();
        lblID = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        panelTermin = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTermini = new javax.swing.JTable();
        lblKa = new javax.swing.JLabel();
        comboBoxKa = new javax.swing.JComboBox<>();
        btnAddTermin = new javax.swing.JButton();
        btnDeleteTermin = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtDatum = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        chkDeponija = new javax.swing.JCheckBox();
        chkReciklaza = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtPocetak = new javax.swing.JTextField();
        txtZavrsetak = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lblIme.setText("Ime:");

        lblPrezime.setText("Prezime:");

        lblMesto.setText("Mesto:");

        btnSacuvaj.setText("Sacuvaj");
        btnSacuvaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajActionPerformed(evt);
            }
        });

        lblID.setText("ID:");

        panelTermin.setBorder(javax.swing.BorderFactory.createTitledBorder("Termini"));

        tblTermini.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblTermini);

        lblKa.setText("Kamion:");

        btnAddTermin.setText("Dodaj termin");
        btnAddTermin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddTerminActionPerformed(evt);
            }
        });

        btnDeleteTermin.setText("Obrisi izabrani termin");
        btnDeleteTermin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteTerminActionPerformed(evt);
            }
        });

        jLabel1.setText("Datum (u formatu dd.mm.yyyy.)");

        jLabel2.setText("Reciklaza:");

        jLabel3.setText("Deponija:");

        jLabel4.setText("Vreme pocetka:");

        jLabel5.setText("Vreme zavrsetka:");

        javax.swing.GroupLayout panelTerminLayout = new javax.swing.GroupLayout(panelTermin);
        panelTermin.setLayout(panelTerminLayout);
        panelTerminLayout.setHorizontalGroup(
            panelTerminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTerminLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelTerminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 536, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelTerminLayout.createSequentialGroup()
                        .addComponent(btnDeleteTermin)
                        .addGap(93, 93, 93)))
                .addGroup(panelTerminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelTerminLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(panelTerminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelTerminLayout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 135, Short.MAX_VALUE)
                                .addComponent(txtDatum, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelTerminLayout.createSequentialGroup()
                                .addGroup(panelTerminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panelTerminLayout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(37, 37, 37)
                                        .addComponent(chkReciklaza, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(33, 33, 33)
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(chkDeponija, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(panelTerminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelTerminLayout.createSequentialGroup()
                                            .addComponent(jLabel5)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(txtZavrsetak, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelTerminLayout.createSequentialGroup()
                                            .addComponent(jLabel4)
                                            .addGap(29, 29, 29)
                                            .addComponent(txtPocetak, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(panelTerminLayout.createSequentialGroup()
                                .addComponent(lblKa)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(comboBoxKa, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelTerminLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAddTermin)
                        .addGap(228, 228, 228))))
        );
        panelTerminLayout.setVerticalGroup(
            panelTerminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTerminLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelTerminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelTerminLayout.createSequentialGroup()
                        .addGroup(panelTerminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtDatum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panelTerminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelTerminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(chkDeponija, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(panelTerminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)))
                            .addComponent(chkReciklaza))
                        .addGap(22, 22, 22)
                        .addGroup(panelTerminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtPocetak, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panelTerminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtZavrsetak, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                        .addGroup(panelTerminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelTerminLayout.createSequentialGroup()
                                .addComponent(lblKa)
                                .addGap(80, 80, 80))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelTerminLayout.createSequentialGroup()
                                .addComponent(comboBoxKa, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(panelTerminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btnAddTermin)
                                    .addComponent(btnDeleteTermin))
                                .addGap(15, 15, 15))))
                    .addGroup(panelTerminLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblMesto)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblIme)
                                    .addComponent(lblID))))
                        .addGap(25, 25, 25))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblPrezime)
                        .addGap(18, 18, 18)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtKRPrezime)
                            .addComponent(txtKRIme)
                            .addComponent(comboBoxMesto, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(114, 114, 114)
                        .addComponent(btnSacuvaj, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(161, 161, 161))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 623, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(panelTermin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 26, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblID))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblIme)
                    .addComponent(txtKRIme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSacuvaj))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtKRPrezime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPrezime))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblMesto)
                    .addComponent(comboBoxMesto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(panelTermin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSacuvajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajActionPerformed

        try {

            String idText = txtID.getText();
            if (!idText.isEmpty()) {
                komunalniRadnik.setKomunalniRadnikID(Long.parseLong(txtID.getText()));

            } else {
                komunalniRadnik.setKomunalniRadnikID(null);

            }
            komunalniRadnik.setIme(txtKRIme.getText());
            komunalniRadnik.setPrezime(txtKRPrezime.getText());
            if (!komunalniRadnik.getIme().matches("[a-zA-Z]+") || !komunalniRadnik.getPrezime().matches("[a-zA-Z]+")) {
                JOptionPane.showMessageDialog(this, "Sistem ne moze da zapamti komunalnog radnika!");

            } else {

                komunalniRadnik.setMesto((Mesto) comboBoxMesto.getSelectedItem());
//                if (mode == Operation.ADD_KR) {
                Controller.getInstance().createKR(komunalniRadnik);
//                } else {
//                    Controller.getInstance().editKR(komunalniRadnik);
//                }
                JOptionPane.showMessageDialog(this, "Sistem je zapamtio komunalnog radnika!");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Sistem ne moze da zapamti komunalnog radnika!");

        }

    }//GEN-LAST:event_btnSacuvajActionPerformed

    private void btnAddTerminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddTerminActionPerformed
        // TODO add your handling code here:
        try {
            Termin t = new Termin();

            Kamion ka = (Kamion) comboBoxKa.getSelectedItem();
            String datum = txtDatum.getText();
            String vremeP = txtPocetak.getText();
            String vremeZ = txtZavrsetak.getText();

            //2 bilo koje cifre, escape znak za tacku i $ za kraj
            //na pocetku ili 0 ili 1 ili 2 mora da bude zbog ^ i posle dalje proveravamo
            DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd.MM.yyyy.");
            LocalDate datumZaUnos = LocalDate.parse(datum, dtf);
            dtf = DateTimeFormatter.ofPattern("HH:mm");
            LocalTime vremePUnos = LocalTime.parse(vremeP, dtf);
            LocalTime vremeZUnos = LocalTime.parse(vremeZ, dtf);

            t.setKomunalniRadnik(komunalniRadnik);
            t.setKamion(ka);

            t.setDatum(datumZaUnos);
            t.setVremePocetka(vremePUnos);

            t.setVremeZavrsetka(vremeZUnos);

            t.setDeponijaOdlazak(chkDeponija.isSelected());
            t.setReciklazaOdlazak(chkReciklaza.isSelected());

            if (datum == null || datum.isEmpty()
                    //                   || !Pattern.matches(datumFormat, datum)
                    || ka == null
                    || vremePUnos.isAfter(vremeZUnos)
                    //                    || !Pattern.matches(vremeFormat, vremeP)
                    //                    || !Pattern.matches(vremeFormat, vremeZ)
                    || komunalniRadnik.getTermini().contains(t)) {
                JOptionPane.showMessageDialog(this, "Greska pri unosu termina!");
            } else {
                try {

                    komunalniRadnik.getTermini().add(t);

                    TableModel tm = new TerminTableModel(komunalniRadnik.getTermini());
                    tblTermini.setModel(tm);
                    tblTermini.getTableHeader().setReorderingAllowed(false);

                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(this, "Greska pri unosu termina!");

                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Greska pri unosu termina!");

        }
    }//GEN-LAST:event_btnAddTerminActionPerformed

    private void btnDeleteTerminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteTerminActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblTermini.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Izaberite red u tabeli!");
        } else {
            TerminTableModel ttm = (TerminTableModel) tblTermini.getModel();
            ttm.removeRow(selectedRow);
        }
    }//GEN-LAST:event_btnDeleteTerminActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddTermin;
    private javax.swing.JButton btnDeleteTermin;
    private javax.swing.JButton btnSacuvaj;
    private javax.swing.JCheckBox chkDeponija;
    private javax.swing.JCheckBox chkReciklaza;
    private javax.swing.JComboBox<String> comboBoxKa;
    private javax.swing.JComboBox<Object> comboBoxMesto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblID;
    private javax.swing.JLabel lblIme;
    private javax.swing.JLabel lblKa;
    private javax.swing.JLabel lblMesto;
    private javax.swing.JLabel lblPrezime;
    private javax.swing.JPanel panelTermin;
    private javax.swing.JTable tblTermini;
    private javax.swing.JTextField txtDatum;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtKRIme;
    private javax.swing.JTextField txtKRPrezime;
    private javax.swing.JTextField txtPocetak;
    private javax.swing.JTextField txtZavrsetak;
    // End of variables declaration//GEN-END:variables
private void prepareForm() {

        comboBoxMesto.setEditable(false);

        switch (mode) {
            case ADD_KR: {

                btnSacuvaj.setVisible(true);
                comboBoxMesto.setEnabled(true);
                lblID.setVisible(false);
                txtID.setVisible(false);
                break;

            }
//            case EDIT_KR: {
//
//                txtKRIme.setEnabled(true);
//                txtKRPrezime.setEnabled(true);
//                txtID.setEnabled(true);
//                txtID.setEditable(false);
//
//
//                
//                btnSacuvaj.setEnabled(true);
//                comboBoxMesto.setEnabled(true);
//
//                txtDatum.setEnabled(true);
//                txtDatum.setEditable(true);
//
//                txtPocetak.setEnabled(true);
//                txtPocetak.setEditable(true);
//
//                txtZavrsetak.setEnabled(true);
//                txtZavrsetak.setEditable(true);
//
//                chkDeponija.setEnabled(true);
//                chkReciklaza.setEnabled(true);
//
//                comboBoxKa.setEnabled(true);
//
//                break;
//            }
            case VIEW_KR: {
                SwingUtilities.invokeLater(() -> {
                    JOptionPane.showMessageDialog(this, "Sistem je ucitao komunalnog radnika!");
                });

                btnSacuvaj.setEnabled(false);
                txtID.setEnabled(false);
                txtID.setEditable(false);
                txtID.setText(komunalniRadnik.getKomunalniRadnikID().toString());
                txtKRIme.setText(komunalniRadnik.getIme());
                txtKRPrezime.setText(komunalniRadnik.getPrezime());
                comboBoxMesto.setSelectedItem(komunalniRadnik.getMesto());

                txtDatum.setEnabled(false);
                txtDatum.setEditable(false);

                txtPocetak.setEnabled(false);
                txtPocetak.setEditable(false);

                txtZavrsetak.setEnabled(false);
                txtZavrsetak.setEditable(false);

                chkDeponija.setEnabled(false);
                chkReciklaza.setEnabled(false);

                comboBoxKa.setEnabled(false);

                btnAddTermin.setVisible(false);
                btnDeleteTermin.setVisible(false);

                TableModel tm = new TerminTableModel(komunalniRadnik.getTermini());
                tblTermini.setModel(tm);
                tblTermini.getTableHeader().setReorderingAllowed(false);

                txtKRIme.setEnabled(false);
                txtKRPrezime.setEnabled(false);
                comboBoxMesto.setEnabled(false);

                break;
            }

        }

    }

    public void fillComboboxes() throws Exception {
        try {
            List<Mesto> mesta = Controller.getInstance().getAllMesta();
            comboBoxMesto.setModel(new DefaultComboBoxModel(mesta.toArray()));
            if (komunalniRadnik != null && komunalniRadnik.getMesto() != null) {
                comboBoxMesto.setSelectedItem(komunalniRadnik.getMesto().getNaziv());
            } else {
                comboBoxMesto.setSelectedIndex(-1);
            }

            List<Kamion> kamioni = Controller.getInstance().getAllKamioni();
            comboBoxKa.setModel(new DefaultComboBoxModel(kamioni.toArray()));
            comboBoxKa.setSelectedIndex(-1);

            TableModel tm = new TerminTableModel(komunalniRadnik.getTermini());
            tblTermini.setModel(tm);
            tblTermini.getTableHeader().setReorderingAllowed(false);
            tblTermini.getTableHeader().setResizingAllowed(false);

            tblTermini.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        } catch (Exception ex) {
            //ako slucajno dodje do greske
            ex.printStackTrace();
        }
    }
}
